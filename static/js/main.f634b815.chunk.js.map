{"version":3,"sources":["components/Jumbotron/index.js","components/Table/index.js","components/FetchRandomUser/index.js","App.js","reportWebVitals.js","index.js"],"names":["Jumbotron","className","Table","props","scope","id","firstName","lastName","city","state","email","age","gender","phone","cell","alt","src","picture","FetchRandomUser","loading","person","a","fetch","response","json","data","this","setState","results","console","log","map","persons","index","name","first","last","location","country","thumbnail","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAeeA,MAZf,WACC,OACC,sBAAKC,UAAU,YAAf,UACC,gDACA,8I,mDCgCYC,MArCf,SAAeC,GACd,OACC,uBAAOF,UAAU,mBAAjB,SACC,kCACC,+BACC,oBAAIG,MAAM,MAAV,eACA,oBAAIA,MAAM,MAAV,yBACA,oBAAIA,MAAM,MAAV,wBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,qBACA,oBAAIA,MAAM,MAAV,2BACA,oBAAIA,MAAM,MAAV,0BACA,oBAAIA,MAAM,MAAV,yBAED,+BACC,oBAAIA,MAAM,MAAV,SAAiBD,EAAME,KACvB,6BAAKF,EAAMG,YACX,6BAAKH,EAAMI,WACX,6BAAKJ,EAAMK,OACX,6BAAKL,EAAMM,QACX,6BAAKN,EAAMO,QACX,6BAAKP,EAAMQ,MACX,6BAAKR,EAAMS,SACX,6BAAKT,EAAMU,QACX,6BAAKV,EAAMW,OACX,6BACC,qBAAKC,IAAKZ,EAAMG,UAAWU,IAAKb,EAAMc,qBC3BvBC,E,4MACpBT,MAAQ,CACPU,SAAS,EACTC,OAAQ,M,8FAET,8BAAAC,EAAA,4DACa,yCADb,SAEwBC,MADX,0CADb,cAEOC,EAFP,gBAGoBA,EAASC,OAH7B,OAGOC,EAHP,OAKCC,KAAKC,SAAS,CAAEP,OAAQK,EAAKG,QAAST,SAAS,IAC/CU,QAAQC,IAAIL,EAAKG,QAAQ,IAN1B,gD,0EASA,WACC,OAAIF,KAAKjB,MAAMU,QACP,6CAGHO,KAAKjB,MAAMW,OAIf,8BAyBEM,KAAKjB,MAAMW,OAAOW,KAAI,SAACC,EAASC,GAAV,OACtB,cAAC,EAAD,CACC5B,GAAI4B,EACJ3B,UAAW0B,EAAQE,KAAKC,MACxB5B,SAAUyB,EAAQE,KAAKE,KACvB5B,KAAMwB,EAAQK,SAAS7B,KACvBC,MAAOuB,EAAQK,SAAS5B,MACxBC,MAAOsB,EAAQtB,MACfC,IAAKqB,EAAQK,SAASC,QACtB1B,OAAQoB,EAAQpB,OAChBC,MAAOmB,EAAQnB,MACfC,KAAMkB,EAAQlB,KACdG,QAASe,EAAQf,QAAQsB,iBAxCrB,0D,GApBmCC,IAAMC,WCSpCC,MATf,WACC,OACC,sBAAKzC,UAAU,kBAAf,UACC,cAAC,EAAD,IACA,cAAC,EAAD,QCIY0C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f634b815.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Jumbotron() {\r\n\treturn (\r\n\t\t<div className=\"jumbotron\">\r\n\t\t\t<h1>User Directory</h1>\r\n\t\t\t<p>\r\n\t\t\t\tWelcome to the random user directory, everytime you refresh the page it\r\n\t\t\t\tshould generate a new random user\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Jumbotron;\r\n","import React from \"react\";\r\n\r\nfunction Table(props) {\r\n\treturn (\r\n\t\t<table className=\"table table-info\">\r\n\t\t\t<tbody>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th scope=\"col\">#</th>\r\n\t\t\t\t\t<th scope=\"col\">First Name:</th>\r\n\t\t\t\t\t<th scope=\"col\">Last Name:</th>\r\n\t\t\t\t\t<th scope=\"col\">City:</th>\r\n\t\t\t\t\t<th scope=\"col\">State:</th>\r\n\t\t\t\t\t<th scope=\"col\">Email:</th>\r\n\t\t\t\t\t<th scope=\"col\">Age:</th>\r\n\t\t\t\t\t<th scope=\"col\">Gender:</th>\r\n\t\t\t\t\t<th scope=\"col\">Phone Number:</th>\r\n\t\t\t\t\t<th scope=\"col\">Cell Number:</th>\r\n\t\t\t\t\t<th scope=\"col\">Picture:</th>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th scope=\"row\">{props.id}</th>\r\n\t\t\t\t\t<td>{props.firstName}</td>\r\n\t\t\t\t\t<td>{props.lastName}</td>\r\n\t\t\t\t\t<td>{props.city}</td>\r\n\t\t\t\t\t<td>{props.state}</td>\r\n\t\t\t\t\t<td>{props.email}</td>\r\n\t\t\t\t\t<td>{props.age}</td>\r\n\t\t\t\t\t<td>{props.gender}</td>\r\n\t\t\t\t\t<td>{props.phone}</td>\r\n\t\t\t\t\t<td>{props.cell}</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<img alt={props.firstName} src={props.picture}></img>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t</tbody>\r\n\t\t</table>\r\n\t);\r\n}\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\n// import Card from \"../Card\";\r\nimport Table from \"../Table\";\r\n\r\nexport default class FetchRandomUser extends React.Component {\r\n\tstate = {\r\n\t\tloading: true,\r\n\t\tperson: null,\r\n\t};\r\n\tasync componentDidMount() {\r\n\t\tconst url = \"https://api.randomuser.me/?results=100\";\r\n\t\tconst response = await fetch(url);\r\n\t\tconst data = await response.json();\r\n\r\n\t\tthis.setState({ person: data.results, loading: false });\r\n\t\tconsole.log(data.results[0]);\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.loading) {\r\n\t\t\treturn <div>Loading...</div>;\r\n\t\t}\r\n\r\n\t\tif (!this.state.person) {\r\n\t\t\treturn <div>No person available</div>;\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{/* BELOW IS WILL DISPLAY USING THE Un List*/}\r\n\t\t\t\t{/* <ul>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\tFull Name: {this.state.person.name.first},\r\n\t\t\t\t\t\t{this.state.person.name.last}\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>City: {this.state.person.location.city}</li>\r\n\t\t\t\t\t<li>State: {this.state.person.location.state}</li>\r\n\t\t\t\t\t<li>Country: {this.state.person.location.country}</li>\r\n\t\t\t\t\t<img src={this.state.person.picture.thumbnail} />\r\n\t\t\t\t</ul> */}\r\n\t\t\t\t{/* BELOW IS WILL DISPLAY USING THE CARD*/}\r\n\t\t\t\t{/* {this.state.person.map((persons, index) => (\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\tfirstName={persons.name.first}\r\n\t\t\t\t\t\tlastName={persons.name.last}\r\n\t\t\t\t\t\tcity={persons.location.city}\r\n\t\t\t\t\t\tstate={persons.location.state}\r\n\t\t\t\t\t\tcountry={persons.location.country}\r\n\t\t\t\t\t\timage={persons.picture.thumbnail}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))} */}\r\n\t\t\t\t{/* BELOW IS WILL DISPLAY USING THE Table*/}\r\n\t\t\t\t{this.state.person.map((persons, index) => (\r\n\t\t\t\t\t<Table\r\n\t\t\t\t\t\tid={index}\r\n\t\t\t\t\t\tfirstName={persons.name.first}\r\n\t\t\t\t\t\tlastName={persons.name.last}\r\n\t\t\t\t\t\tcity={persons.location.city}\r\n\t\t\t\t\t\tstate={persons.location.state}\r\n\t\t\t\t\t\temail={persons.email}\r\n\t\t\t\t\t\tage={persons.location.country}\r\n\t\t\t\t\t\tgender={persons.gender}\r\n\t\t\t\t\t\tphone={persons.phone}\r\n\t\t\t\t\t\tcell={persons.cell}\r\n\t\t\t\t\t\tpicture={persons.picture.thumbnail}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from \"react\";\r\nimport Jumbotron from \"./components/Jumbotron\";\r\nimport FetchRandomUser from \"./components/FetchRandomUser\";\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div className=\"container-fluid\">\r\n\t\t\t<Jumbotron />\r\n\t\t\t<FetchRandomUser />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}